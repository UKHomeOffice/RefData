version: '3.7'


volumes:
  postgres_data_refdata:
    driver: local


services:
  postgres_refdata:
    image: postgres:10-alpine
    restart: on-failure
    container_name: postgres_refdata
    volumes:
      - postgres_data_refdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    ports:
      - 5433:5432
    networks:
      - db
    labels:
      - "traefik.enable=false"

  flyway_build:
    build: .
    container_name: flyway_build
    image: quay.io/ukhomeofficedigital/refdata:latest

  public_refdata_flyway:
    image: quay.io/ukhomeofficedigital/refdata:latest
    container_name: public_refdata_flyway
    command: /mnt/docker/run.sh
    working_dir: /mnt
    environment:
      POSTGRES_DB: postgres
      POSTGRES_SERVER: postgres_refdata
      POSTGRES_PORT: 5432
      FLYWAY_INIT_USER: postgres
      FLYWAY_INIT_PASSWORD: mysecretpassword
      FLYWAY_PLACEHOLDERS_REFERENCE_DB_NAME: reference
      FLYWAY_PLACEHOLDERS_REFERENCE_OWNER_NAME: ownerreference
      FLYWAY_PLACEHOLDERS_REFERENCE_OWNER_PASSWORD: mysecretpassword
      FLYWAY_PLACEHOLDERS_REFERENCE_SCHEMA: reference
      FLYWAY_PLACEHOLDERS_GOVERNANCE_OWNER_NAME: ownergovernance
      FLYWAY_PLACEHOLDERS_GOVERNANCE_OWNER_PASSWORD: mysecretpassword
      FLYWAY_PLACEHOLDERS_GOVERNANCE_SCHEMA: governance
      FLYWAY_PLACEHOLDERS_REFERENCE_AUTHENTICATOR_USER: authenticatorreference
      FLYWAY_PLACEHOLDERS_REFERENCE_AUTHENTICATOR_PASSWORD: auth1234
      FLYWAY_PLACEHOLDERS_REFERENCE_ANON_USER: webanon
      FLYWAY_PLACEHOLDERS_REFERENCE_SERVICE_USER: servicereference
      FLYWAY_PLACEHOLDERS_REFERENCE_READONLY_USER: readonlyreference
      FLYWAY_PLACEHOLDERS_GOVERNANCE_AUTHENTICATOR_USER: authenticatorgovernance
      FLYWAY_PLACEHOLDERS_GOVERNANCE_AUTHENTICATOR_PASSWORD: auth1234
      FLYWAY_PLACEHOLDERS_GOVERNANCE_ANON_USER: webanongovernance
      FLYWAY_PLACEHOLDERS_GOVERNANCE_SERVICE_USER: servicegovernance
      FLYWAY_PLACEHOLDERS_GOVERNANCE_READONLY_USER: readonlygovernance
    volumes:
      - ${PUBLIC_REFDATA_FLYWAY}:/mnt
    depends_on:
      - postgres_refdata
      - flyway_build
    networks:
      - db
    labels:
      - "traefik.enable=false"

  postgrest_reference:
    image: quay.io/ukhomeofficedigital/postgrest
    restart: on-failure
    container_name: postgrest_reference
    environment:
      PGRST_DB_URI: "postgres://authenticatorreference:auth1234@postgres_refdata:5432/reference"
      PGRST_DB_ANON_ROLE: webanon
      PGRST_SECRET_IS_BASE64: "false"
      PGRST_JWT_AUD: postgrest-refdata
      PGRST_ROLE_CLAIM_KEY: .refdbrole
      PGRST_DB_SCHEMA: reference
      PGRST_SERVER_PROXY_URI: "http://localhost:3000/"
      KEYCLOAK_URL: "${SCHEME}://keycloak.${DOMAINNAME}"
      KEYCLOAK_REALM: dev
    command: /usr/local/bin/getKeycloakKey.sh
    depends_on:
      - postgres_refdata
      - public_refdata_flyway
    networks:
      - web
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:postgrest_reference.${DOMAINNAME}"
      - "traefik.port=3000"
      - "traefik.protocol=http"
      - "traefik.docker.network=web"

  postgrest_governance:
    image: quay.io/ukhomeofficedigital/postgrest
    restart: on-failure
    container_name: postgrest_governance
    environment:
      PGRST_DB_URI: "postgres://authenticatorgovernance:auth1234@postgres_refdata:5432/reference"
      PGRST_DB_ANON_ROLE: webanongovernance
      PGRST_SECRET_IS_BASE64: "false"
      PGRST_JWT_AUD: postgrest-governance
      PGRST_ROLE_CLAIM_KEY: .govdbrole
      PGRST_DB_SCHEMA: governance
      PGRST_SERVER_PROXY_URI: "http://localhost:3000/"
      KEYCLOAK_URL: "${SCHEME}://keycloak.${DOMAINNAME}"
      KEYCLOAK_REALM: dev
    command: /usr/local/bin/getKeycloakKey.sh
    depends_on:
      - postgres_refdata
      - public_refdata_flyway
    networks:
      - web
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:postgrest_governance.${DOMAINNAME}"
      - "traefik.port=3000"
      - "traefik.protocol=http"
      - "traefik.docker.network=web"


networks:
  db:
    external:
      name: db
  web:
    external:
      name: web
